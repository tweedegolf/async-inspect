// MIR for `foo_3::{closure#0}` 0 coroutine_post-transform
/* coroutine_layout = CoroutineLayout {
    field_tys: {},
    variant_fields: {
        Unresumed(0): [],
        Returned (1): [],
        Panicked (2): [],
    },
    storage_conflicts: BitMatrix(0x0) {},
} */

fn foo_3::{closure#0}(_1: {async fn body of foo_3<T>()}, _2: &mut Context<'_>) -> Poll<T> {
    debug _task_context => _5;
    let mut _0: std::task::Poll<T>;
    let mut _3: T;
    let mut _4: T;
    let mut _5: &mut std::task::Context<'_>;

    bb0: {
        _5 = move _2;
        StorageLive(_3);
        _3 = <T as Default>::default() -> [return: bb1, unwind: bb5];
    }

    bb1: {
        _4 = std::hint::black_box::<T>(move _3) -> [return: bb2, unwind: bb4];
    }

    bb2: {
        StorageDead(_3);
        goto -> bb9;
    }

    bb3: {
        _0 = Poll::<T>::Ready(move _4);
        discriminant(_1) = 1;
        return;
    }

    bb4 (cleanup): {
        goto -> bb5;
    }

    bb5 (cleanup): {
        StorageDead(_3);
        goto -> bb6;
    }

    bb6 (cleanup): {
        resume;
    }

    bb7: {
        return;
    }

    bb8: {
        goto -> bb10;
    }

    bb9: {
        goto -> bb3;
    }

    bb10: {
        goto -> bb7;
    }
}
